/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jFrame;

import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class IssueBooks extends javax.swing.JFrame {

    /**
     * Creates new form IssueBooks
     */
    public IssueBooks() {
        initComponents();
        try {
            Connect();
        } catch (SQLException ex) {
            Logger.getLogger(IssueBooks.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    public void Connect() throws SQLException{
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con= DriverManager.getConnection("jdbc:mysql://localhost:3306/sahyadri_library_management_system", "root", "Sahyadri@157");
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AdminLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        utilDateModel1 = new org.jdatepicker.impl.UtilDateModel();
        jDatePickerUtil1 = new org.jdatepicker.util.JDatePickerUtil();
        jDateComponentFactory1 = new org.jdatepicker.JDateComponentFactory();
        dateComponentFormatter1 = new org.jdatepicker.impl.DateComponentFormatter();
        rSDateChooserBeanInfo1 = new rojeru_san.componentes.RSDateChooserBeanInfo();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        issuedate = new rojeru_san.componentes.RSDateChooser();
        duedate = new rojeru_san.componentes.RSDateChooser();
        bookid = new javax.swing.JTextField();
        studentid = new javax.swing.JTextField();
        sname = new javax.swing.JTextField();
        btnissue = new javax.swing.JButton();
        btnclose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 37, 37, -1));

        jLabel2.setText("Book ID");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 130, 50, -1));

        jLabel3.setText("Student ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 217, 80, -1));

        jLabel4.setText("Student Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 291, 80, -1));

        jLabel5.setText("Issue Date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 362, 70, -1));

        jLabel6.setText("Due Date");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 410, 60, -1));

        issuedate.setPlaceholder("Pick a Date\n");
        getContentPane().add(issuedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 350, -1, -1));
        getContentPane().add(duedate, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 400, -1, -1));
        getContentPane().add(bookid, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 170, -1));
        getContentPane().add(studentid, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 220, 170, -1));
        getContentPane().add(sname, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 180, -1));

        btnissue.setText("Issue");
        btnissue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnissueActionPerformed(evt);
            }
        });
        getContentPane().add(btnissue, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 480, -1, -1));

        btnclose.setText("close");
        btnclose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncloseActionPerformed(evt);
            }
        });
        getContentPane().add(btnclose, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 480, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnissueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnissueActionPerformed
        // TODO add your handling code here:
       
      SimpleDateFormat dtFormat = new SimpleDateFormat("dd-MM-yyyy");
String bookID = bookid.getText();
String studentID = studentid.getText();
String studentName = sname.getText();
String issueDate = dtFormat.format(issuedate.getDate());
String dueDate = dtFormat.format(duedate.getDate());
String status = "Issued";

try {
    Connection con = ConnectionProvider.getCon();
    Statement st = con.createStatement();

    // Check if book_id exists in the BOOK table
    ResultSet rs = st.executeQuery("SELECT * FROM BOOK WHERE book_id='" + bookID + "'");
    if (rs.next()) {
        // Check if student_id exists in the STUDENT table
        ResultSet rs1 = st.executeQuery("SELECT * FROM STUDENT WHERE student_id='" + studentID + "'");
        if (rs1.next()) {
            // Insert into BOOK_ISSUE table
            st.executeUpdate("INSERT INTO BOOK_ISSUE VALUES('" + bookID + "','" + studentID + "','" + studentName + "','" + issueDate + "','" + dueDate + "','" + status + "')");
            
            JOptionPane.showMessageDialog(null, "Book successfully issued");
            setVisible(false);
            new IssueBooks().setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect studentID");
        }
    } else {
        JOptionPane.showMessageDialog(null, "Incorrect BookID");
    }
} catch (SQLException e) {
    e.printStackTrace(); // Handle the exception appropriately in your application
}


        
    }//GEN-LAST:event_btnissueActionPerformed

    private void btncloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncloseActionPerformed
        // TODO add your handling code here:
        new FacultyLogin().setVisible(true);
    }//GEN-LAST:event_btncloseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IssueBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IssueBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IssueBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IssueBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IssueBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookid;
    private javax.swing.JButton btnclose;
    private javax.swing.JButton btnissue;
    private org.jdatepicker.impl.DateComponentFormatter dateComponentFormatter1;
    private rojeru_san.componentes.RSDateChooser duedate;
    private rojeru_san.componentes.RSDateChooser issuedate;
    private org.jdatepicker.JDateComponentFactory jDateComponentFactory1;
    private org.jdatepicker.util.JDatePickerUtil jDatePickerUtil1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private rojeru_san.componentes.RSDateChooserBeanInfo rSDateChooserBeanInfo1;
    private javax.swing.JTextField sname;
    private javax.swing.JTextField studentid;
    private org.jdatepicker.impl.UtilDateModel utilDateModel1;
    // End of variables declaration//GEN-END:variables
}
